/* В папке присутствует файл "reset.css" - он необходим для обнуления базовых настроек стилей браузера */
/*________________________________________________________________________________________________________________________________________*/
/*................ БАЗОВАЯ БАЗА  ................*/
/* Будет использовать стиль для всех div настранице */
div { 
    color: #000;
}
/* Здесь "parent" название class из html. Применит стиль ко всем классам с таким названием */
.parent {
    color: #000;
}
/* Здесь "id-block" название id из html. Применит стиль именно к этому id */
#id-block {
    color: #000;
}
/* Здесь "parent1, parent2, parent3" название class`ов из html. Применит стиль ко всем этим class`ам сразу */
.parent1, .parent2, .parent3 {
    color: #000;
}
/* Здесь "parent" название class из html. Применит стиль к class с таким название, который встретися только в div */
div.parent {
    color: #000;
}
/* Здесь "parent" название class из html. Применит стиль к class с таким название, который встретися только в дочерних div */
div .parent {
    color: #000;
}
/* Здесь "parent1" название class из html. Применит стиль ко всем дочерним class`ам (child1) первого порядка (дочерние классы могут быть и глубже. Будут задеты только первые) */
.parent1>.child1 {
    color: #000;
}
/*________________________________________________________________________________________________________________________________________*/
/*................ Приоритет селекторов  ................*/
/*
1. Element, pseudo-element (Весс - 1)
2. Class, attribute, pseudo-class (Весс - 10)
2. ID (Весс - 100)
2. inline style (Стиль внутри самого html) (Весс - 1000)
*/
/*________________________________________________________________________________________________________________________________________*/
/* Единицы измерения */
/* Абсолютные */
.px {
    font-size: 10px; /* Пиксели - базовая база для браузера, который любит все пересчитывать в пиксели */
}
/* Относительные */
.em {
    font-size: 10em; /* Используется в дочерних элементах. Он берет размеры в пикселях у родителя (на уровень выше) и УМНОЖАЕТ его на значение "em" */
}
.rem {
    font-size: 10rem; /* Работает как и em, но слушает ТОЛЬКО ГЛАВНОГО (самого первого) родителя */
}
.percent { /* % */
    width: 100%;
    height: 100%;
    /* И так с другими свойствами, которые пропустим. Суть в том, что работает как и "em", но считает все в процентах */
}
.vh { /* viewport height */
    font-size: 100vh;
    /* 
    При пересчете похоже на процент. Но считает не от родителя, а от ВЫСОТЫ ВИДИМОЙ ЧАСТИ САЙТА
    (Позволяет делать сайт "динамичным" - он подстраивается под размеры окна. 
    Если пользователь уменьшает размер окна, то элементы тоже будут уменьшаться) 
    */
}
.vw { /* viewport width */
    font-size: 100vw;
    /* 
    При пересчете похоже на процент. Но считает не от родителя, а от ШИРИНЫ ВИДИМОЙ ЧАСТИ САЙТА
    (Позволяет делать сайт "динамичным" - он подстраивается под размеры окна.
    Если пользователь уменьшает размер окна, то элементы тоже будут уменьшаться) 
    */
}
.vmin .vmax{
    font-size: 3vmin;
    font-size: 3vmax;
    /* 
    Тут сложно объяснить словами, надо смотреть на примере. Но типа как-то так:
    Когда ширина меньше высоты (И наоборот), то изменяется только что-то одно
    */
}
/*________________________________________________________________________________________________________________________________________*/
/* Дальше рассмотрим основные свойства редактирования стилей */
/* Свойства для текста  */
.class-name-for-text {
    color: green; /* Задаем цвет */
    font-family: serif, 'Times New Roman'; /* Задаем шрифт */ 
    font-size: 16px; /* Размер шрифта. Можно делать ссылку на шрифт в интернете и подключать его таким образом */
    line-height: 16px; /* Размер (высота) строки */
    font-style: italic; /* Стиль шрифта (Обычный или курсив, как пример)*/
    font-weight: normal; /* Жирность текста */
    text-align: left; /* Выравнивание текста */
    text-decoration: none; /* Различные декорации текста (Подчеркивание, зачеркивание и тд) */
    text-shadow: hoff voff blur #000; /* Создание тени у текста (Сдвиг по х, сдвиг по у, размывание, цвет тени) */
    text-transform: uppercase; /* Верхний регистр/нижний регистр у текста */
    text-indent: 10px; /* Отступ от начала строки у первого слова (типа красная строка) */
    letter-spacing: normal; /* Расстояние между буквами */
    word-spacing: 10px; /* Расстояние между словами */
    white-space: 10px; /* Запрет тексту на перенос на новую строку */
}
/* Свойства для блочных и строчных объектов */
.class-name-for-inline-and-block {
    box-sizing: border-box; /* хз че это. Советую писать только так */
    padding: 50px 50px 50px 50px; /* Отступы объектов от краев внутри блока (верх, право, низ, лево) */
    margin: 50px 50px 50px 50px; /* Отступы БЛОКА от краев (верх, право, низ, лево) */
    /* 
    Для padding и margin можно создавать отступы для отдельных сторон (padding-top, padding-right и тд)
    */
    width: 500px; /* Ширина блока (Не работает на inline) */
    height: 500px; /* Высота блока (Не работает на inline) */
    min-width: 100px; /* Ширина может быть любой, но не меньше этого значения (Полезно, когда пользователь может менять размер web-окна) */
    max-width: 700px; /* Ширина может быть любой, но не больше этого значени (Полезно, когда пользователь может менять размер web-окна) */
    min-height: 100px; /* Аналогично (для max-height тоже)*/
    overflow: hidden; /* Если текст выезжает за границы блока, то излишки будут убраны (Имеет и другие варианты, которые можно задать (scroll например)) */
    display: block; /* Позволяет заставить блок вести себя, как строка.Существует куча вариантов */
    box-shadow: 0px 0px 0px 0px #000; /* Создает тень от блока (Смещение по x, Смещение по y, размер тени, блюр, цвет тени) */
}
/* Свойства для background */
.class-name-for-background {
    background: #000; /* Цвет фона */

    background-image: url("Путь до изображения"); /* Добавление изображения на фоне */
    background-position: 0 0; /* Смещение(Можно в пикселях, можно в процентах)  */
    background-attachment: fixed; /* Привязывает картинку, что при скроле страницы она остается на месте */
    background-size: auto; /* Позволяет растягиваться изображению самому по размеру блока */
}
.position {
    position: static; /* Позиция блока (Можно использовать top, left, z-index(высота блока - поможет спрятать одно за другое))*/
    /* У этого position очень много различных свойств. Нет смысла их все описывать. Если надо узнать, то гуглим */
}
.transform {
    /* Тут так же куча значений. Все описания можно найти в интернете. А пока только базу */
    transform-origin: 0px 10px; /* Позволяет задать центр, вокруг которого будут происходить все трансформации (вроде как работает не только с transform) */
    transform: translate(30px, 0px); /* Смещение объекта на какое-то количество пикселей (процентов) по x y */
    transform: rotate(45deg); /* Поворот объекта в плоскости вокруг своей оси */
    transform: scale(0.5); /* Изменение размера объекта */
    transform: skew(45deg); /* Еще какой-то поворот по странной траектории */
}
.transition { /* Используется при изменении чего-то при наведении на него */
    transition-duration: 3s; /* Переход выполняется за это время */
    transition-delay: 3s; /* Задержка перед переходом при наведении */
}
.animation { /* Для создания анимации объекта */
    animation: move-block 3s infinite alternate; /* Вызов анимации, которая длится 3с, вызывается бесконечно, и зеркалится */
    animation-delay: 1s; /* Задержка анимации (например после перезагрузки страницы) */
    animation-fill-mode: none; /* Отвечает за свойства, которые объект оставит у себя после окончания анимации */
}
@keyframes move-block { /* Создание самой анимации (Ее описание) */
    from {
        left: 0%;
    }
    to {
        right: 100% ;
    }
}
/*________________________________________________________________________________________________________________________________________*/
/* Псевдоклассы */
.class-name:hover { /* hover - при навдении срабатывает какое-то действие */
    background-color: #fff; /* При наведении на объект его цвет изменится */
}
.class-name:visited { /* Срабатывает, когда кто-то перешл по ссылке */
    background-color: #000; /* При переходе по ссылке эта ссылка окрасится в другой цвет */
}
.class-name:active { /* Срабатывает при нажатии на кнопку */
    background-color: #000; /* Цвет изменится только после нажатия на кнопку (именно в момент нажатия) */
}
.class-name:focus {
    box-shadow: #000; /* Когда фокусируемся на объекте (например ввод текста в поисковик), то появится тень (или какое-то другое дейсвтвие) */
}
.class-name:first-child { /* Данное изменение применится только к первому дочернему элементу. Существует несколько вариантов обращения, Подробнее читаем в инете */
    color: #000; /* Перекрасится в другой цвет */
}
/*________________________________________________________________________________________________________________________________________*/
/* Псевдоэлементы */
.class-name::before { /* Создает дочерний элемент до всех существующих. Описывается внутри данной структуры */
    color: #000;
}
.class-name::after { /* Создает дочерний элемент после вех существующих. Описывается внутри данной структуры */
    color: #000;
}
.class-name::first-line { /* Применит стиль только для первой строки  */
 color: #000;
}
.class-name::first-letter { /* Применит стиль только для первой буквы */
    color: #000;
}
.class-name:hover::after { /* Они могут работать в связке. При наведении появится новый дочерний элемент после всех существующих */
    color: #000;
}
/*________________________________________________________________________________________________________________________________________*/
/* Какая-то херня, которая требует более глубокого изучения */
.flexbox { /* Позволяет управлять расположением объектов */
    display: flex; /* Задаем дисплею, что это теперь flexbox, с которым будем работать */
    justify-content: center; /* Как именно расположить объекты */
    align-items: t ;
}
.grid {
    display: grid; /* Поясняем, что этот блок - это теперь структура grid */
    grid-template-columns: 200px 200px 200px; /* Задаем три колонки по 200 пикселей */
    grid-template-rows: 200px 200px 200px; /* Задаем три строки по 200 пикселей */
}

